#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AddressBookDB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BasicAddressBook")]
	public partial class AddressBookDBSampleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public AddressBookDBSampleDataContext() : 
				base(global::AddressBookDB.Properties.Settings.Default.BasicAddressBookConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AddressBookDBSampleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AddressBookDBSampleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AddressBookDBSampleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AddressBookDBSampleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspAddCountry")]
		public int uspAddCountry([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string country)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), country);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspSelectCountry")]
		public ISingleResult<uspSelectCountryResult> uspSelectCountry()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<uspSelectCountryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspAddCity")]
		public int uspAddCity([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string city, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> countryID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), city, countryID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspSelectCity")]
		public ISingleResult<uspSelectCityResult> uspSelectCity()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<uspSelectCityResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspAddContact")]
		public int uspAddContact([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LN", DbType="NVarChar(50)")] string lN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FN", DbType="NVarChar(50)")] string fN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MN", DbType="NVarChar(50)")] string mN, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dob, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string add, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string eAdd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(15)")] string cNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lN, fN, mN, dob, add, cID, eAdd, cNum);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspSelectContact")]
		public ISingleResult<uspSelectContactResult> uspSelectContact()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<uspSelectContactResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspSelectedContact")]
		public ISingleResult<uspSelectedContactResult> uspSelectedContact([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> contactID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), contactID);
			return ((ISingleResult<uspSelectedContactResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspUpdateContact")]
		public int uspUpdateContact([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> contID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LN", DbType="NVarChar(50)")] string lN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FN", DbType="NVarChar(50)")] string fN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MN", DbType="NVarChar(50)")] string mN, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dob, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string add, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string eAdd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(15)")] string cNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), contID, lN, fN, mN, dob, add, cID, eAdd, cNum);
			return ((int)(result.ReturnValue));
		}
	}
	
	public partial class uspSelectCountryResult
	{
		
		private int _CountryID;
		
		private string _CountryName;
		
		public uspSelectCountryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this._CountryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
	}
	
	public partial class uspSelectCityResult
	{
		
		private int _CityID;
		
		private string _City;
		
		public uspSelectCityResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL")]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this._CityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(202) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
	}
	
	public partial class uspSelectContactResult
	{
		
		private int _ContactID;
		
		private string _ContName;
		
		public uspSelectContactResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="Int NOT NULL")]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this._ContactID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContName", DbType="NVarChar(153)")]
		public string ContName
		{
			get
			{
				return this._ContName;
			}
			set
			{
				if ((this._ContName != value))
				{
					this._ContName = value;
				}
			}
		}
	}
	
	public partial class uspSelectedContactResult
	{
		
		private int _ContactID;
		
		private string _ContactLN;
		
		private string _ContactFN;
		
		private string _ContactMN;
		
		private System.DateTime _ContactDOB;
		
		private string _ContactAdd;
		
		private int _CityID;
		
		private string _ContactEmailAdd;
		
		private string _ContactNum;
		
		public uspSelectedContactResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="Int NOT NULL")]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this._ContactID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactLN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactLN
		{
			get
			{
				return this._ContactLN;
			}
			set
			{
				if ((this._ContactLN != value))
				{
					this._ContactLN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactFN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactFN
		{
			get
			{
				return this._ContactFN;
			}
			set
			{
				if ((this._ContactFN != value))
				{
					this._ContactFN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMN", DbType="NVarChar(50)")]
		public string ContactMN
		{
			get
			{
				return this._ContactMN;
			}
			set
			{
				if ((this._ContactMN != value))
				{
					this._ContactMN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactDOB", DbType="Date NOT NULL")]
		public System.DateTime ContactDOB
		{
			get
			{
				return this._ContactDOB;
			}
			set
			{
				if ((this._ContactDOB != value))
				{
					this._ContactDOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactAdd", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactAdd
		{
			get
			{
				return this._ContactAdd;
			}
			set
			{
				if ((this._ContactAdd != value))
				{
					this._ContactAdd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL")]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this._CityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmailAdd", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactEmailAdd
		{
			get
			{
				return this._ContactEmailAdd;
			}
			set
			{
				if ((this._ContactEmailAdd != value))
				{
					this._ContactEmailAdd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNum", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string ContactNum
		{
			get
			{
				return this._ContactNum;
			}
			set
			{
				if ((this._ContactNum != value))
				{
					this._ContactNum = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
